---
import { getImage, imageConfig, type LocalImageProps, type RemoteImageProps } from 'astro:assets';
import type {UnresolvedImageTransform} from "astro";
import type {HTMLAttributes} from "astro/types";

// The TypeScript diagnostic for JSX props uses the last member of the union to suggest props, so it would be better for
// LocalImageProps to be last. Unfortunately, when we do this the error messages that remote images get are complete nonsense
// Not 100% sure how to fix this, seems to be a TypeScript issue. Unfortunate.
type Props = {
  mobile: [number, number],
  alt: string,
  sm: [number, number],
  src: Promise<{default: ImageMetadata}>,
  class?: string,
};

const props = Astro.props;

const mobileImage = await getImage({
  width: props.mobile[0],
  height: props.mobile[1],
  fit: 'cover',
  src: props.src,
  alt: props.alt,
} as UnresolvedImageTransform);

const smImage = await getImage({
  width: props.sm[0],
  height: props.sm[1],
  fit: 'cover',
  src: props.src,
  alt: props.alt,
} as UnresolvedImageTransform);
---

<picture>
        <source
                media={`(max-width: 640px)`}
                width={props.mobile[0]}
                height={props.mobile[1]}
                srcset={mobileImage.src}>
        <source
                media="(min-width: 640px)"
                width={props.sm[0]}
                height={props.sm[1]}
                srcset={smImage.src}>
        <img src={mobileImage.src} alt={props.alt}  class={props.class}>
</picture>
